<?xml version="1.0" encoding="UTF-8"?>
<web-fragment version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd">
  <name>JWebSwingCore</name>
  <!--
  <servlet>
    <description>The Ajax Receiver for JWebSwing</description>
    <servlet-name>AjaxReceiver</servlet-name>
    <servlet-class>za.co.mmagon.jwebswing.base.servlets.AjaxReceiver</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
    <description>Handles all angular objects loading. 
            Called from inside angular for access to $rootscope</description>
    <servlet-name>AngularDto</servlet-name>
    <servlet-class>za.co.mmagon.jwebswing.base.servlets.AngularObjectsServlet</servlet-class>
  </servlet>
  <servlet>
    <description>Returns the angular script. Sets up the angular application</description>
    <servlet-name>AngularServlet</servlet-name>
    <servlet-class>za.co.mmagon.jwebswing.base.servlets.AngularServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>AjaxReceiver</servlet-name>
    <url-pattern>/ajax</url-pattern>
  </servlet-mapping>
  <servlet>
    <description>The JavaScript Renderer</description>
    <servlet-name>JavaScriptServlet</servlet-name>
    <servlet-class>za.co.mmagon.jwebswing.base.servlets.JavaScriptServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>JavaScriptServlet</servlet-name>
    <url-pattern>/js</url-pattern>
  </servlet-mapping>
  <servlet>
    <description>The CSS Renderer</description>
    <servlet-name>CSSServlet</servlet-name>
    <servlet-class>za.co.mmagon.jwebswing.base.servlets.CSSServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>CSSServlet</servlet-name>
    <url-pattern>/css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AngularDto</servlet-name>
    <url-pattern>/ad</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AngularServlet</servlet-name>
    <url-pattern>/as</url-pattern>
  </servlet-mapping>-->
  <!--
    <filter>
        <filter-name>SetCacheControl</filter-name>
        <filter-class>za.co.mmagon.CacheControlFilter</filter-class>
    </filter>                       
    <filter-mapping>
        <filter-name>SetCacheControl</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    -->
    <!--
    <description>The JWebSwing Framework</description>
    <display-name>JWebSwing</display-name>
    <distributable/>
    <filter>
      <filter-name>GzipFilter</filter-name>
      <filter-class>za.co.mmagon.GZipServletFilter</filter-class>
    </filter>
    <filter-mapping>
      <filter-name>GzipFilter</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>-->
    <listener>
        <description>Guice Injector</description>
        <listener-class>com.armineasy.injection.GuiceContext</listener-class>
    </listener>
    
    <filter>
        <filter-name>guiceFilter</filter-name>
        <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>guiceFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <servlet>
        <description>AtmosphereServlet</description>
        <servlet-name>AtmosphereServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
        <load-on-startup>0</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>AtmosphereServlet</servlet-name>
        <url-pattern>/chat/*</url-pattern>
    </servlet-mapping>
    
</web-fragment>
